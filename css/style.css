/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* universal reset removes the extra padding added by browsers by default */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; /* considered better practice to force box-sizing to inherit from the body */
}

html {
  /* font-size: 10px; */
  /* Since 1 rem is = the root font-size, 1 rem = 10px. To convert the rest of the file, divide the px units by 10 to get their rem value. */
  /* But declaring the font-size in px prevents users from customizing it when they visit your site. Bad UX. */
  /* Use percentage instead. Note that it will inherit the 16px default but it's preferable to work with the easier calculation of 10px */
  /* So calculate the percentage to use: it will be 10% of 16px. This allows the user to change font size and make it easier for devs to calculate rem units. */

  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.logo {
  height: 3.5rem;
}

.logo:hover {
  animation: spinner 1s ease-out;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* backface-visibility: hidden;  hack fix for when animaiton is shaky */
}

.heading-primary-main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation: moveInLeft 1s ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;
  margin-bottom: 6rem;
}

@keyframes moveInLeft {
  0% {
    opacity: 0; /*invisible*/
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 100%;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding:1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative; /*this is for the .btn::after element to reference its position from*/
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-3px); /*moves up*/
  box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

.btn:active {
  transform: translateY(-1px); /* pushes into the page when clicked*/
  box-shadow: 0 .5rem 1rem rgba(0,0,0,.2); /*reduce the shadow/blur on click to make it look closer to the page*/
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%; /*the after pseudo-element references the initial .btn element so we want it to be identical*/
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /*it should sit behind the initial .btn*/
  transition: all, 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}


.btn-animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards;
  /*
  the fill mode applies the styles before the animation starts,
  ensuring the btn isn't on the screen till the animaiton moves it there
  */
}
